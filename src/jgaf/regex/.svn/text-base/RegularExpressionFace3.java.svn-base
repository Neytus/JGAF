/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RegularExpressionFace.java
 *
 * Created on May 7, 2011, 6:40:36 PM
 */

package jgaf.regex;

import java.awt.BorderLayout;
import javax.swing.JPanel;

/**
 *
 * @author hanis
 */
public class RegularExpressionFace extends javax.swing.JPanel {

    private RegularExpressionEditor editor;
    //private JPanel centerPanel;
    //private JTextField expressionTextFiled;

    private RegularExpressionTextArea regexPane;
    private RegularExpressionEditorToolbar toolbar;


    public RegularExpressionFace() {
        initComponents();
    }

    public RegularExpressionFace(RegularExpressionEditor editor) {
        this.editor = editor;
        initComponents();
        toolbar = new RegularExpressionEditorToolbar(editor);
        add(toolbar, BorderLayout.NORTH);

        regexPane = new RegularExpressionTextArea();
        upperPanel.setLayout(new BorderLayout());
        upperPanel.add(regexPane, BorderLayout.CENTER);
        regexPane.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
              //  handleKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                handleKeyTyped(evt);
            }
        });
    }


    private RegularExpressionEditor getEditor() {
        return editor;
    }

    public void repaintMe() {

       // regexTextArea.setText(editor.getRegex().writeConcise());
        if(editor.getRegex() != null) {
            regexPane.setNormalText(editor.getRegex().writeConcise());
        }
        repaint();
    }


    public RegularExpressionTextArea getRegexPane() {
        return regexPane;
    }

    private void handleKeyTyped(java.awt.event.KeyEvent evt) {
      //  addInfoText(evt.toString() + "\n");
        String re = getExpressionText();
     //   System.out.println(re);
        getEditor().setExpression(re);
    }


//    public void setExpression(String re) {
//        try {
//            re = re.replaceAll("eps", MathConstants.EPSILON);
//            RegularExpression regex = new RegularExpression(re);
//
//            addInfoText(regex.writeConcise() + "\n");
//            regexPane.setNormalText(re);
//            editor.setRegex(regex);
//            //addInfoText(re + "-------------\n" + regex.geiveMePositionos() + "\n-------------\n");
//        } catch (WrongExpressionException ex) {
//            String[] split = ex.getMessage().split(", ");
//            addInfoText(ex.getMessage() + "\n");
//            System.out.println("--" + split[1]+"--");
//            int from = Integer.valueOf(split[1]);
//            int to = Integer.valueOf(split[2]);
//            regexPane.setHighlightedText(re, from, to);
//        }
//    }

    public void setInfoText(String text) {
        infoTextArea.setText(text);
    }

    public void addInfoText(String text) {
        infoTextArea.append(text + "\n");
    }




    public String getExpressionText() {
        return regexPane.getText();
    }


    public JPanel getRepreseter() {
        return upperPanel;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        upperPanel = new javax.swing.JPanel();
        bottomPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(120);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        javax.swing.GroupLayout upperPanelLayout = new javax.swing.GroupLayout(upperPanel);
        upperPanel.setLayout(upperPanelLayout);
        upperPanelLayout.setHorizontalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        upperPanelLayout.setVerticalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(upperPanel);

        infoTextArea.setColumns(20);
        infoTextArea.setRows(5);
        infoTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                infoTextAreaKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(infoTextArea);

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 794, Short.MAX_VALUE)
                .addContainerGap())
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(bottomPanel);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void infoTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_infoTextAreaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_infoTextAreaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JTextArea infoTextArea;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel upperPanel;
    // End of variables declaration//GEN-END:variables

}
